//boilerplate code= the code that vs code enerate for us
//javascript is a dynamically typed language wo dont have to mention data type before we use a varible
// var: redeclaration and assignment possible
// var a = 10;
// console.log(a)
// var a = 20;                                 //a+=4 compound statement
// console.log(a)
// a = 30;
// console.log(a)
// let: redeclaration not possible and assignment possible
// let a = 10;
// console.log(a)
// // let a = 20;
// // console.log(a)
// a = 30;
// console.log(a)
// const: redeclaration not possible and assignment is also not possible
// const a = 10;
// console.log(a)
// const  a = 20;
// console.log(a)
// a = 30;
// console.log(a);
//fullName camel
//full_name snake case
// Full_Name Pascal case

console.log(typeof typeof 1)
//datatypes
// 1. number:
// let a = 10;
// let b = -5;
// let c = 2.5;
// console.log(typeof(a))
// console.log(typeof(b))
// console.log(typeof(c))
// // 2. string:
// let name = 'shiv';
// console.log(typeof(name))
// // 3. boolean:
// let x = false;
// console.log(typeof(x));
// // undefined:
// let y;
// console.log(typeof(y))
// y = 20;
// console.log(y)
// console.log(typeof(y));
// // null: type->object
// let j = null;
// console.log(typeof(j))
// let x= bigint("123");
// console.log(type(x));
//123n
//

//let a;
//console.log(a) undefined
//const a;
//console.log(a) ReferenceError: a is not defined

//operator
// 1.Arithemetic operators:
// let x = 10;
// let y = 2;
// let z = x + y;
// console.log(z)
// let z = x - y;
// console.log(z)
// let z = x * y;
// console.log(z)
// let z = x / y;
// console.log(z)
// let z = x % y;
// console.log(z)
// let z = x ** y;  // 10 pow 2
// console.log(z)
// 2.Assignment operator:
// let z = x;
// console.log(z);
// let z = 10;
// // z = z + 5
// z += 5
// console.log(z)
// let z = 10;
// // z = z - 5
// z -= 5
// console.log(z)
// let z = 10;
// // z = z + 5
// z *= 5
// console.log(z);
// let z = 10;
// // z = z + 5
// z /= 5
// console.log(z);
// let z = 10;
// // z = z + 5
// z %= 5
// console.log(z)


// // 3.comparison operator:
let a = 10;
let b = '10';
let c = 20;
console.log(a == b); // 10 == 10 // ==its checks for number
console.log(a === b); // 10(num) === 10(string) //===it checks for datatypes
console.log(a != b);
console.log(a !== b);
console.log(a > c);
console.log(a < c);
console.log(a >= b);
console.log(a <= b);
// console.log(a =< b);
// // logical operators:
// let i = true;
// let j = false;
// console.log(i && j);
// console.log(i || j);
// console.log(!j);
// // let g = 10
// // let f = ++g;
// // let f = g++;
// // console.log(f)
// // console.log(g)
// let g = 5;
// // let f = --g;
// let f = g--;
// console.log(f)
// console.log(g);


//conditional
// If-else-if:
// let x = 1;
// if(x>5){
//     console.log("X is greater than 5");
// }else if(x > 3){
//     console.log("X is greater than 3")
// }else{
//     console.log("X is smaller ")
// }

//loops
// 1. for loops: Print odd number between 50 to 80:
// for(let i= 51; i<=80; i= i+2){
//     console.log(i)
// }
// 2. Nested for loops:
// for(let i=1; i<=3; i++){
//     console.log("Outer loop" + i);
//     for(let j=1; j<=3; j++){
//         console.log("Inner loop" + j)
//     }
// }
// 3.while:
// let i = 0;
// while(i < 5) {
//     console.log(i);
//     i++;
// }
// 4.do while:
// let i = 0;
// do{
//     console.log(i);
//     i++;
// }while(i < 5);

//for (let val of strVar){
//} we have two more loop for-of and for-in which help in 
// 1. for-of: Iterate over an array
// let arr = [1, 2, 3, 4, 5];
// for (let val of arr) {
//     console.log(val);
// }
// 2. for-in: Iterate over an object
// let obj = {a: 1, b: 2, c: 3};
// for (let key in obj) {  //key 
//     console.log(key + " = " + obj[key]);
// }
// 3. for-in: Iterate over an array
// let arr = [1, 2, 3, 4, 5];
// for (let key in arr) {
//     console.log(key + " = " + arr[key]);
// }


//for-of (for string and array )

let str='priyanka';
for (let i of str){
    console.log("i=",i);
}
let str1="priyankach";
let size=0;
for (let i of str1){
    console.log("i=",i);
    size++;
}
console.log("string size is ",size);



